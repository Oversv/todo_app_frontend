{"version":3,"sources":["components/Header.js","components/Todo/SubAddTask.js","components/Todo/SubCounter.js","components/Todo/SubFilterBar.js","components/Todo/SubTask.js","components/Todo/SubTaskList.js","components/Todo/Todo.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","SubAddTask","state","id","taskDescription","done","handleAddTask","task","uuid","props","newTask","setState","takeDescriptionChanged","event","takeDescription","target","value","type","autocomplete","placeholder","this","onChange","onClick","disabled","length","SubCounter","counter","text","render","completedTasks","pendingTasks","tasks","SubFilterBar","allTasks","deleteAll","SubTask","circleState","taskCompleted","updateTask","bind","deleteTask","SubTaskList","show","showCompleted","showPendig","showTasks","map","element","index","key","Todo","addTask","push","filter","deleteAllTasks","window","confirm","Footer","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6PAYeA,E,iLARP,OACI,4BAAQC,UAAU,gBACd,0C,GAJKC,IAAMC,W,gBC6DZC,E,2MA1DXC,MAAO,CACHC,GAAI,GACJC,gBAAiB,GACjBC,MAAM,G,EAGVC,cAAgB,WACZ,IAAMC,EAAO,CACTJ,GAAIK,MACJJ,gBAAiB,EAAKF,MAAME,gBAC5BC,MAAM,GAGV,EAAKI,MAAMC,QAAQH,GACnB,EAAKI,SAAS,CAACP,gBAAiB,M,EAGpCQ,uBAAyB,SAACC,GACtB,IAAIC,EAAkB,EAAKZ,MAAME,gBAEjCU,EAAkBD,EAAME,OAAOC,MAC/B,EAAKL,SAAS,CAACP,gBAAiBU,K,wEAIhC,OACA,yBAAKhB,UAAU,0BACX,yBAAKA,UAAU,UACX,2BACImB,KAAK,OAAOP,SAAO,EACnBZ,UAAU,cACVK,GAAG,UACHe,aAAe,MACfC,YAAY,qBACZH,MAAOI,KAAKlB,MAAME,gBAClBiB,SAAUD,KAAKR,0BAGvB,yBAAKd,UAAU,SACZ,4BACKA,UAAW,sBACXwB,QAASF,KAAKd,cACdiB,SAAgD,IAAtCH,KAAKlB,MAAME,gBAAgBoB,QAErC,uBAAG1B,UAAU,wCAGjB,4BACIA,UAAU,kDACVwB,QAASF,KAAKd,cACdiB,SAAgD,IAAtCH,KAAKlB,MAAME,gBAAgBoB,QAHzC,a,GAjDSzB,IAAMC,WC0BhByB,E,iLAzBP,IAAIC,EAAU,EACVC,EAAO,GAcX,MAZyB,cAAtBP,KAAKX,MAAMmB,QACVF,EAAUN,KAAKX,MAAMiB,QAAQG,eAAeL,OAC5CG,EAAI,mBAAeD,EAAf,qBAEuB,YAAtBN,KAAKX,MAAMmB,QAChBF,EAAUN,KAAKX,MAAMiB,QAAQI,aAAaN,OAC1CG,EAAI,mBAAeD,EAAf,oBAGJA,EAAUN,KAAKX,MAAMiB,QAAQK,MAAMP,OACnCG,EAAI,mBAAeD,EAAf,WAGJ,yBAAK5B,UAAU,WACX,yBAAKA,UAAU,UACX,uBAAGA,UAAU,WAAW6B,S,GApBnB5B,IAAMC,WCkChBgC,E,iLA/BP,OACI,yBAAKlC,UAAU,qCACX,2BACImB,KAAK,SACLnB,UAAU,yBACVkB,MAAM,UACNM,QAASF,KAAKX,MAAMqB,eAExB,2BACIb,KAAK,SACLnB,UAAU,yBACVkB,MAAM,YACNM,QAASF,KAAKX,MAAMoB,iBAExB,2BACIZ,KAAK,SACLnB,UAAU,yBACVkB,MAAM,MACNM,QAASF,KAAKX,MAAMwB,WAExB,2BACIhB,KAAK,SACLnB,UAAU,yBACVkB,MAAM,aACNM,QAASF,KAAKX,MAAMyB,iB,GA3BbnC,IAAMC,WCmClBmC,E,iLAhCP,IAAIC,EAAc,MACdC,EAAgB,KAOpB,OALGjB,KAAKX,MAAMF,KAAKF,OACf+B,EAAY,QACZC,EAAgB,kBAIhB,yBAAKvC,UAAU,oCACX,yBAAKA,UAAU,wCACX,4BACIA,UAAW,UAAYsC,EACvBd,QAASF,KAAKX,MAAM6B,WAAWC,KAAKnB,KAAMA,KAAKX,MAAMF,KAAKJ,OAGlE,yBAAKL,UAAU,SACX,uBAAGA,UAAW,gBAAkBuC,GAAgBjB,KAAKX,MAAMF,KAAKH,kBAEpE,yBAAKN,UAAU,aACX,uBAAGA,UAAU,mDACZwB,QAASF,KAAKX,MAAM+B,WAAWD,KAAKnB,KAAMA,KAAKX,MAAMF,KAAKJ,MAE3D,2BAAOc,KAAK,SAASnB,UAAU,2CAA2CkB,MAAM,SAChFM,QAASF,KAAKX,MAAM+B,WAAWD,KAAKnB,KAAMA,KAAKX,MAAMF,KAAKJ,Y,GA3BxDJ,IAAMC,WC+BbyC,E,iLA7BF,IAAD,OAEAC,EAAO,GAYX,OATIA,EADqB,cAAtBtB,KAAKX,MAAMmB,OACHR,KAAKX,MAAMkC,cAES,YAAtBvB,KAAKX,MAAMmB,OACTR,KAAKX,MAAMmC,WAGXxB,KAAKX,MAAMoC,UAIlB,6BACKH,EAAKI,KAAI,SAACC,EAASC,GAChB,OAAO,kBAAC,EAAD,CACHzC,KAAMwC,EACNE,IAAKD,EACLR,WAAY,EAAK/B,MAAM+B,WACvBF,WAAa,EAAK7B,MAAM6B,qB,GAtBtBvC,IAAMC,WC0GjBkD,E,YAtGX,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KAUV0C,QAAU,SAAA5C,GACN,IAAMwB,EAAQ,EAAK7B,MAAM6B,MAEzBA,EAAMqB,KAAK7C,GACX,EAAKI,SAAS,CAACoB,MAAOA,IACtB,EAAKpB,SAAS,CAACmB,aAAcC,KAhBd,EAmBnBS,WAAa,SAAArC,GACT,IAAM4B,EAAQ,EAAK7B,MAAM6B,MAAMsB,QAAO,SAAAN,GAAO,OAAIA,EAAQ5C,KAAOA,KAC1D2B,EAAe,EAAK5B,MAAM4B,aAAauB,QAAO,SAAAN,GAAO,OAAIA,EAAQ5C,KAAOA,KACxE0B,EAAiB,EAAK3B,MAAM2B,eAAewB,QAAO,SAAAN,GAAO,OAAIA,EAAQ5C,KAAOA,KAElF,EAAKQ,SAAS,CAACoB,MAAOA,IACtB,EAAKpB,SAAS,CAACmB,aAAcA,IAC7B,EAAKnB,SAAS,CAACkB,eAAgBA,KA1BhB,EA6BnByB,eAAiB,WACb,IAAIvB,EAAQ,GACIwB,OAAOC,QAAQ,sCAG3B,EAAK7C,SAAS,CAACoB,MAAOA,IACtB,EAAKpB,SAAS,CAACmB,aAAcC,IAC7B,EAAKpB,SAAS,CAACkB,eAAgBE,MApCpB,EAwCnBO,WAAa,SAAAnC,GAET,IAAM4B,EAAQ,EAAK7B,MAAM6B,MAAMe,KAAI,SAAAC,GAK/B,OAHGA,EAAQ5C,KAAOA,IAChB4C,EAAQ1C,MAAQ0C,EAAQ1C,MAEnB0C,KAGX,EAAKpC,SAAS,CAACoB,MAAOA,KAlDP,EAsDnBD,aAAe,WACX,IAAMC,EAAQ,EAAK7B,MAAM6B,MAAMsB,QAAO,SAAAN,GAAO,OAAKA,EAAQ1C,QAE1D,EAAKM,SAAS,CAACmB,aAAcC,IAC7B,EAAKpB,SAAS,CAACiB,OAAQ,aA1DR,EA6DnBC,eAAiB,WACb,IAAME,EAAQ,EAAK7B,MAAM6B,MAAMsB,QAAO,SAAAN,GAAO,OAAIA,EAAQ1C,QAEzD,EAAKM,SAAS,CAACkB,eAAgBE,IAC/B,EAAKpB,SAAS,CAACiB,OAAQ,eAjER,EAoEnBK,SAAW,WACP,IAAMF,EAAQ,EAAK7B,MAAM6B,MAAMsB,QAAO,SAAAN,GAAO,OAAIA,KAEjD,EAAKpC,SAAS,CAACoB,MAAOA,IACtB,EAAKpB,SAAS,CAACiB,OAAQ,WArEvB,EAAK1B,MAAS,CACV6B,MAAO,GACPF,eAAgB,GAChBC,aAAc,GACdF,OAAQ,SAPG,E,sEA6Ef,OACI,0BAAM9B,UAAU,QACZ,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CACI4B,QAASN,KAAKlB,MACd0B,OAAQR,KAAKlB,MAAM0B,SACvB,kBAAC,EAAD,CAAYlB,QAASU,KAAK+B,UAC1B,kBAAC,EAAD,CACIvB,OAAQR,KAAKlB,MAAM0B,OACnBiB,UAAWzB,KAAKlB,MAAM6B,MACtBa,WAAYxB,KAAKlB,MAAM4B,aACvBa,cAAevB,KAAKlB,MAAM2B,eAC1BW,WAAYpB,KAAKoB,WACjBF,WAAalB,KAAKkB,aACtB,kBAAC,EAAD,CACIJ,UAAWd,KAAKkC,eAChBxB,aAAcV,KAAKU,aACnBD,eAAgBT,KAAKS,eACrBI,SAAUb,KAAKa,iB,GAhGpBlC,IAAMC,WCMVyD,E,iLARP,OACI,4BAAQ3D,UAAU,iBACd,0C,GAJKC,IAAMC,WCgBZ0D,MAZf,WACI,OAEI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAQC,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASnC,OAAO,kBAAC,EAAD,MAASoC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b572d739.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n    render() {\n        return ( \n            <header className=\"header-index\">\n                <p>HEADER</p>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport uuid from \"uuid/v4\";\n\nclass SubAddTask extends React.Component{\n  \n    state ={  \n        id: \"\",  \n        taskDescription: \"\",\n        done: false\n    }   \n\n    handleAddTask = () =>{           \n        const task = {  \n            id: uuid(),        \n            taskDescription: this.state.taskDescription,         \n            done: false \n        }\n     \n        this.props.newTask(task); \n        this.setState({taskDescription: \"\"});     \n    }\n\n    takeDescriptionChanged = (event) =>{\n        let takeDescription = this.state.taskDescription;\n        \n        takeDescription = event.target.value;        \n        this.setState({taskDescription: takeDescription});             \n    }\n\n    render(){\n        return(            \n        <div className=\"row align-items-center\">\n            <div className=\"col-10\">\n                <input \n                    type=\"text\" newTask\n                    className=\"input-group\" \n                    id=\"addTask\" \n                    autocomplete = \"off\"\n                    placeholder=\"Add your task here\"\n                    value={this.state.taskDescription}\n                    onChange={this.takeDescriptionChanged}                \n                />\n            </div>\n            <div className=\"col-2\">\n               <button \n                    className =\"reset-btn d-md-none\"\n                    onClick={this.handleAddTask} \n                    disabled={this.state.taskDescription.length === 0}\n                >\n                    <i className=\"fas fa-plus-circle fa-2x d-md-none\"></i>\n               </button>\n    \n                <button                   \n                    className=\"btn btn-primary btn-sm d-none d-none d-md-block\"                    \n                    onClick={this.handleAddTask}\n                    disabled={this.state.taskDescription.length === 0}\n                >ADD</button>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default SubAddTask;","import React from 'react';\n\nclass SubCounter extends React.Component{\n    render(){\n        let counter = 0;\n        let text = \"\";\n     \n        if(this.props.render === 'completed'){\n            counter = this.props.counter.completedTasks.length;\n            text = `You have ${counter} completed tasks`;\n\n        }else if(this.props.render === 'pending'){           \n            counter = this.props.counter.pendingTasks.length;\n            text = `You have ${counter} pending tasks`;\n\n        }else{\n            counter = this.props.counter.tasks.length;\n            text = `You have ${counter} tasks`;\n        }\n        return(            \n            <div className=\"row m-3\">\n                <div className=\"col-12\">\n                    <p className=\"m-0 p-1\">{text}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SubCounter ;","import React from 'react';\n\nclass SubFilterBar extends React.Component{\n    render(){\n\n        return(            \n            <div className=\"row d-flex justify-content-center\">\n                <input \n                    type=\"button\" \n                    className=\"btn btn-primary btn-sm\" \n                    value=\"Pending\"\n                    onClick={this.props.pendingTasks}\n                    />\n                <input \n                    type=\"button\" \n                    className=\"btn btn-primary btn-sm\" \n                    value=\"Completed\"\n                    onClick={this.props.completedTasks}\n                    />\n                <input \n                    type=\"button\" \n                    className=\"btn btn-primary btn-sm\" \n                    value=\"All\"\n                    onClick={this.props.allTasks}\n                    />\n                <input \n                    type=\"button\" \n                    className=\"btn btn-primary btn-sm\" \n                    value=\"Delete All\"\n                    onClick={this.props.deleteAll}\n                    />\n            </div>\n        )\n    }\n}\n\nexport default SubFilterBar;\n","import React from 'react';\n\nclass SubTask extends React.Component{ \n\n    render(){ \n        let circleState = \"red\";\n        let taskCompleted = null; \n\n        if(this.props.task.done){\n            circleState=\"green\";\n            taskCompleted = \"task-completed\";\n        }    \n\n        return(      \n            <div className=\"row align-items-center mt-2 mb-2\">\n                <div className=\"col-1 p-0 d-flex justify-content-end\">\n                    <button \n                        className={\"circle \" + circleState}\n                        onClick={this.props.updateTask.bind(this, this.props.task.id)}\n                        ></button>\n                </div>\n                <div className=\"col-9\">\n                    <p className={\"m-0 p-1 task \" + taskCompleted}>{this.props.task.taskDescription}</p>                    \n                </div>\n                <div className=\"col-2 p-0\">\n                    <i className=\"fas fa-trash-alt fa-lg d-block d-md-none pointer\" \n                     onClick={this.props.deleteTask.bind(this, this.props.task.id)}></i>\n\n                    <input type=\"button\" className=\"btn btn-primary btn-sm d-none d-md-block\" value=\"Delete\"\n                    onClick={this.props.deleteTask.bind(this, this.props.task.id)}\n                    />\n                </div>\n            </div>        \n        )\n    }\n}\n\nexport default SubTask;","import React from 'react';\nimport SubTask from './SubTask';\n\nclass SubTaskList extends React.Component{\n    render(){\n\n        let show = \"\";\n\n        if(this.props.render === 'completed'){\n            show = this.props.showCompleted;      \n\n        }else if(this.props.render === 'pending'){\n            show = this.props.showPendig;  \n\n        }else{\n            show = this.props.showTasks;             \n        }\n\n        return(                      \n            <div>\n                {show.map((element, index) =>{               \n                    return <SubTask \n                        task={element}                                                 \n                        key={index} \n                        deleteTask={this.props.deleteTask}\n                        updateTask ={this.props.updateTask}\n                    />                    \n                })}\n            </div>\n        )  \n    }\n}\n\nexport default SubTaskList;","import React from 'react';\nimport SubAddTask from './SubAddTask';\nimport SubCounter from './SubCounter';\nimport SubFilterBar from './SubFilterBar';\nimport SubTaskList from './SubTaskList';\n\nclass Todo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state =  {\n            tasks: [],\n            completedTasks: [],\n            pendingTasks: [],\n            render: \"tasks\"                \n        }       \n    }\n    \n    addTask = task =>{\n        const tasks = this.state.tasks;      \n        \n        tasks.push(task);        \n        this.setState({tasks: tasks})     \n        this.setState({pendingTasks: tasks})  \n    }   \n\n    deleteTask = id =>{\n        const tasks = this.state.tasks.filter(element => element.id !== id);   \n        const pendingTasks = this.state.pendingTasks.filter(element => element.id !== id);   \n        const completedTasks = this.state.completedTasks.filter(element => element.id !== id);  \n       \n        this.setState({tasks: tasks});  \n        this.setState({pendingTasks: pendingTasks});  \n        this.setState({completedTasks: completedTasks});  \n    }\n\n    deleteAllTasks = () =>{        \n        let tasks = [];  \n        let deleteAll = window.confirm('Do you want to delete all tasks?');\n\n        if(deleteAll) {\n            this.setState({tasks: tasks});\n            this.setState({pendingTasks: tasks});  \n            this.setState({completedTasks: tasks});  \n        }          \n    }\n\n    updateTask = id =>{        \n     \n        const tasks = this.state.tasks.map(element =>{   \n                     \n            if(element.id === id){\n              element.done = !element.done;\n            }   \n            return element;\n        })\n        \n        this.setState({tasks: tasks});     \n       \n    };\n\n    pendingTasks = () =>{\n        const tasks = this.state.tasks.filter(element => !element.done);\n        \n        this.setState({pendingTasks: tasks});  \n        this.setState({render: \"pending\" })  \n    }    \n\n    completedTasks = () =>{\n        const tasks = this.state.tasks.filter(element => element.done);\n        \n        this.setState({completedTasks: tasks});  \n        this.setState({render: 'completed'});   \n    }\n    \n    allTasks = () =>{\n        const tasks = this.state.tasks.filter(element => element); \n      \n        this.setState({tasks: tasks});  \n        this.setState({render: \"tasks\" }) \n    } \n\n    render() {\n        \n        return ( \n            <main className=\"main\">\n                <div className=\"container sizeTodo\">\n                    <SubCounter \n                        counter={this.state}\n                        render={this.state.render}/>\n                    <SubAddTask newTask={this.addTask}/>\n                    <SubTaskList \n                        render={this.state.render}\n                        showTasks={this.state.tasks} \n                        showPendig={this.state.pendingTasks}                        \n                        showCompleted={this.state.completedTasks}\n                        deleteTask={this.deleteTask} \n                        updateTask ={this.updateTask}/>\n                    <SubFilterBar \n                        deleteAll={this.deleteAllTasks}\n                        pendingTasks={this.pendingTasks}\n                        completedTasks={this.completedTasks}\n                        allTasks={this.allTasks}/>\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default Todo;","import React from 'react';\n\nclass Footer extends React.Component {\n    render() {\n        return ( \n            <footer className=\"footer-index \">\n                <p>FOOTER</p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Todo from './components/Todo/Todo';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n\n        <div>        \n            <Header/>\n            <Todo/> \n            <Footer/>       \n        </div>\n    \n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}